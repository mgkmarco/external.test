version: '3.8'

services:
  
  nginx:
    image: nginx:alpine
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - externalhost
    ports:
      - "4000:4000"
      
  externalhost:
    image: ${DOCKER_REGISTRY-}external.test.host
    build:
      context: ..
      dockerfile: src/External.Test.Host/Dockerfile
    environment:
      - Kafka__ConnectionString=kafka:9092
      - Database__ConnectionString=mongodb://mongo:27017
    depends_on:
      - kafka
      - mongo
    ports:
      - "8080"
    restart: on-failure

  mongo:
    image: mongo
    restart: always
    ports:
      - "27017:27017"    

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    depends_on:
      - mongo

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    hostname: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  kafka:
    image: confluentinc/cp-kafka:latest
    ports:
      - "9092:9092"
      - "9093:9093"
    depends_on:
      - zookeeper
    environment:
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_LISTENERS= INTERNAL://kafka:9092,EXTERNAL://kafka:9093
      - KAFKA_ADVERTISED_LISTENERS= INTERNAL://kafka:9092,EXTERNAL://localhost:9093
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP= INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_INTER_BROKER_LISTENER_NAME= INTERNAL
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
    restart: on-failure

  control-center:
    image: confluentinc/cp-enterprise-control-center:5.3.1
    hostname: control-center
    container_name: control-center
    ports:
      - "9021:9021"
    depends_on:
      - zookeeper
      - kafka
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: 'kafka:9092'
      CONTROL_CENTER_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      CONTROL_CENTER_REPLICATION_FACTOR: 1
      CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
      CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1
      CONFLUENT_METRICS_TOPIC_REPLICATION: 1
      PORT: 9021 